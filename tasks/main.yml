---
# tasks file for kubevirt_vm_manage

#TODO: Assert the sanity of our inputs, ie ensure manual cpu and memory aren't set while also setting instancetype..

# - template:
#     src: './virtualmachine-data_volume_templates.yml.j2'
#     dest: "{{ '/tmp/dvt.yml' }}"
# #   loop: "{{ vm_services }}"

# - fail:

- name: Enforce vm state
  kubevirt.core.kubevirt_vm:
    name: "{{ vm_name }}"
    state: "{{ vm_state }}"
    namespace: "{{ vm_namespace }}"
    labels: "{{ vm_labels }}"
    wait: true
    wait_timeout: "{{ vm_wait_timeout | default(300) }}"
    instancetype:
      kind: virtualmachineclusterinstancetype
      name: "{{ vm_instancetype }}"
    preference: "{{ vm_preference | default(omit)}}"
    data_volume_templates:
      - "{{ lookup('ansible.builtin.template', './virtualmachine-data_volume_templates.yml.j2') | from_yaml }}" #This needs to be changed to support multiple datavolumetemplates
    spec:
      architecture: amd64
      domain:
        devices: "{{ vm_devices | default({}) }}"
        machine:
          type: pc-q35-rhel9.4.0
        resources: "{{ vm_resource | default(omit) }}" #Ignore if instancetype is defined
      subdomain: headless
      networks: "{{ vm_networks | default(omit) }}"
      volumes:
      - dataVolume:
          name: "{{ vm_name }}-volume"
        name: rootdisk
      - cloudInitNoCloud:
          userDataBase64: "{{ vm_user_data | b64encode }}"
        name: cloudinitdisk

  register: r_vm

- name: Manage Services
  loop: "{{ vm_services }}"
  kubernetes.core.k8s:
    state: "{{ vm_state }}"
    definition: "{{ lookup('ansible.builtin.template', './service.yml.j2', jinja2_native=true)}}"

- name: Manage routes
  loop: "{{ vm_routes }}"
  kubernetes.core.k8s:
    state: "{{ vm_state }}"
    definition: "{{ lookup('ansible.builtin.template', './route.yml.j2', jinja2_native=true)}}"